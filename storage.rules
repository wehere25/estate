rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidImageType() {
      return request.resource.contentType.matches('image/.*');
    }

    // Property images
    match /properties/{propertyId}/{imageId} {
      allow read: if true;
      allow write: if isAuthenticated() 
        && isValidImageType() 
        && request.resource.size < 5 * 1024 * 1024;
    }
    
    // User profiles
    match /users/{userId}/profile/{imageId} {
      allow read: if true;
      allow write: if isOwner(userId) 
        && isValidImageType()
        && request.resource.size < 2 * 1024 * 1024;
    }
    
    // Deny by default
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
