platform :ios, '14.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  # Add special options for BoringSSL to fix -G flag issues
  pod 'BoringSSL-GRPC', :modular_headers => true

  # Install all Flutter pods
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  # Fix deployment target for each pod
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
      
      # Special handling for BoringSSL-GRPC (fix -G flag issues)
      if target.name == 'BoringSSL-GRPC'
        puts "Applying BoringSSL-GRPC fixes in #{config.name} configuration"
        
        # Replace compiler flags
        config.build_settings['OTHER_CFLAGS'] = '-DOPENSSL_NO_ASM -fno-objc-arc'
        config.build_settings['OTHER_CPLUSPLUSFLAGS'] = '-DOPENSSL_NO_ASM -fno-objc-arc'
        
        # Set preprocessor definitions
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = ['$(inherited)', 'COCOAPODS=1', 'OPENSSL_NO_ASM=1', 'BORINGSSL_PREFIX=GRPC']
      end
      
      # Make sure all pods include the Flutter framework search paths
      if config.build_settings['FRAMEWORK_SEARCH_PATHS']
        unless config.build_settings['FRAMEWORK_SEARCH_PATHS'].include?('${PODS_ROOT}/../Flutter')
          config.build_settings['FRAMEWORK_SEARCH_PATHS'] << '${PODS_ROOT}/../Flutter'
        end
      else
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] = ['$(inherited)', '${PODS_ROOT}/../Flutter', '${PODS_XCFRAMEWORKS_BUILD_DIR}/Flutter']
      end
      
      # Add Flutter to header search paths for all pods
      if config.build_settings['HEADER_SEARCH_PATHS']
        unless config.build_settings['HEADER_SEARCH_PATHS'].include?('${PODS_ROOT}/../Flutter')
          config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/../Flutter'
        end
      else
        config.build_settings['HEADER_SEARCH_PATHS'] = ['$(inherited)', '${PODS_ROOT}/../Flutter']
      end
    end
  end
  
  # Direct patch of project.pbxproj to fix BoringSSL -G flag issues
  project_path = installer.pods_project.path
  project_pbxproj = File.join(project_path, 'project.pbxproj')
  if File.exist?(project_pbxproj)
    content = File.read(project_pbxproj)
    modified_content = content.gsub(/ -G /, ' ')
                             .gsub(/ -G,/, ',')
                             .gsub(/,-G /, ',')
                             .gsub(/,-G,/, ',')
                             .gsub(/"-G"/, '""')
                             .gsub(/ -G$/, '')
                             .gsub(/^-G /, '')
    
    if content != modified_content
      puts "Fixed -G flags in project.pbxproj"
      File.write(project_pbxproj, modified_content)
    end
  end
  
  # Include flutter_paths_fix.xcconfig in all project configurations
  installer.generated_projects.each do |project|
    project.targets.each do |target|
      target.build_configurations.each do |config|
        # Add custom xcconfig to all targets
        xcconfig_path = File.expand_path('flutter_paths_fix.xcconfig')
        config.base_configuration_reference = project.new_file(xcconfig_path)
      end
    end
  end
end
