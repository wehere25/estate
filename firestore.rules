rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Global functions
    function isDebugMode() {
      return true; // Set to true for development, false for production
    }
    
    function isAuthenticated() {
      return request.auth != null || isDebugMode();
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        (
          isDebugMode() || 
          (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true)
        );
    }
    
    function isOwner(userId) {
      return isAuthenticated() && (request.auth.uid == userId || isDebugMode());
    }
    
    // Base rules for all collections - more permissive in debug mode
    match /{document=**} {
      allow read, write, update, delete: if isDebugMode();
      allow write: if false;
    }
    
    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAdmin();
      
      // User's favorites subcollection
      match /favorites/{propertyId} {
        allow read, write: if isOwner(userId) || isDebugMode();
      }
    }
    
    // Properties collection
    match /properties/{propertyId} {
      allow read: if true;
      allow create, update, delete: if isAdmin() || isDebugMode();
      
      // Property comments subcollection
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isAuthenticated();
        allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.userId || isAdmin();
      }
    }
    
    // PRIMARY NOTIFICATION PATH - /notifications/{userId}/user_notifications/{notificationId}
    match /notifications/{userId} {
      allow read, write: if isOwner(userId) || isDebugMode() || isAdmin();
      
      match /user_notifications/{notificationId} {
        allow read: if isOwner(userId) || isDebugMode() || isAdmin();
        allow write: if isOwner(userId) || isDebugMode() || isAdmin();
        allow delete: if isOwner(userId) || isDebugMode() || isAdmin();
      }
    }
    
    // ALTERNATE NOTIFICATION PATH - /user_notifications/{userId}/notifications/{notificationId}
    match /user_notifications/{userId} {
      allow read, write: if isOwner(userId) || isDebugMode() || isAdmin();
      
      match /notifications/{notificationId} {
        allow read: if isOwner(userId) || isDebugMode() || isAdmin();
        allow write: if isOwner(userId) || isDebugMode() || isAdmin();
        allow delete: if isOwner(userId) || isDebugMode() || isAdmin();
      }
    }
    
    // FCM tokens - explicitly allowing write operations
    match /fcm_tokens/{userId} {
      allow read, write: if isDebugMode() || isOwner(userId) || isAdmin();
    }
    
    // Global notifications
    match /global_notifications/{notificationId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || isDebugMode();
    }
    
    // Chat messages
    match /chats/{chatId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.userId1 || 
        request.auth.uid == resource.data.userId2 || 
        isAdmin() || 
        isDebugMode()
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        request.auth.uid == resource.data.userId1 || 
        request.auth.uid == resource.data.userId2 || 
        isAdmin()
      );
      
      match /messages/{messageId} {
        allow read: if isAuthenticated() && (
          request.auth.uid == get(/databases/$(database)/documents/chats/$(chatId)).data.userId1 || 
          request.auth.uid == get(/databases/$(database)/documents/chats/$(chatId)).data.userId2 || 
          isAdmin() || 
          isDebugMode()
        );
        allow create: if isAuthenticated() && (
          request.auth.uid == get(/databases/$(database)/documents/chats/$(chatId)).data.userId1 || 
          request.auth.uid == get(/databases/$(database)/documents/chats/$(chatId)).data.userId2
        );
      }
    }
    
    // Notification collections - explicitly allowing all operations
    match /notifications/{userId}/user_notifications/{notificationId} {
      allow read, write, delete: if isDebugMode() || isOwner(userId) || isAdmin();
    }
    
    // Add direct rule for top-level collection
    match /notifications/{userId} {
      allow read, write, delete: if isDebugMode() || isOwner(userId) || isAdmin();
    }
    
    match /user_notifications/{userId}/notifications/{notificationId} {
      allow read, write, delete: if isDebugMode() || isOwner(userId) || isAdmin();
    }
    
    // Add direct rule for top-level collection
    match /user_notifications/{userId} {
      allow read, write, delete: if isDebugMode() || isOwner(userId) || isAdmin();
    }
  }
}